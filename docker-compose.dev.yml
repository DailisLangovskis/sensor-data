version: '2.0'

services:
    sensor-data:
        container_name: sensor-data-ui
        build:           
            context: ./src
            dockerfile: Dockerfile
        image: sensor-data-ui:latest
        env_file:
            - .env  
        ports: #Forwarded from host to docker container
            - ${HTTP_PORT}:${HTTP_PORT} # main application
        depends_on:
            - rest-api
        volumes:
            - "./sensor-data-collector:/code/sensor-data-collector"
            - "./images:/code/images"
            #Execute npm link in hslayers-ng repo and then npm link hslayers-ng in this repo
            - "${HSLPATH}:/code/node_modules/hslayers-ng" 
        command: > 
            npm run web
    sensor-data-proxy:
        container_name: sensor-data-proxy
        image: sensor-data-ui:latest
        env_file:
            - .env
        ports: #Forwarded from host to docker container
             - ${PROXY_PORT}:${PROXY_PORT} # proxy service
        command: >
            npm run proxy
    rest-api:
        build:
            context: ./restAPI
            dockerfile: Dockerfile
        image: rest-api
        container_name: rest-api
        env_file:
            - .env
        ports:
            - ${API_PORT}:${API_PORT} # rest api service
        depends_on:
            - sensor-data-db
        volumes:
            - "./restAPI:/code/restAPI"
        command: >
            npm run serve-api

    sensor-data-db:
        image: timescale/timescaledb-postgis:latest-pg11
        volumes:
            - ./postgresql/data:/var/lib/postgresql/11/main
        container_name: sensor-data-db 
        env_file:
            - .env
        restart: always
    nginx:
        image: nginx:1.16-apine
        volumes:
            - ./nginx.conf:/etc/nginx/sites-available/default.conf
        env_file:
             - .env
        ports:
            - ${NGINX_PORT}:${NGINX_PORT}
        depends_on:
            - sensor-data
            - rest-api
            - sensor-data-proxy


              
