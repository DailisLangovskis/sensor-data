server {
 #       listen 443 ssl;
	 listen 80;
        server_name localhost;
        client_max_body_size 2m;
#	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
#    	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    
        location /layman/ {
                proxy_set_header        Host $host:$server_port;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Proto $scheme;
                proxy_pass http://127.0.0.1:8000/;
        }

        location /sensor-data/ {
		proxy_pass http://127.0.0.1:8082/;
		proxy_set_header Host       $host;
        }

        # Used for live reloading in webpack-dev-server
        location /sockjs-node {
             proxy_set_header X-Real-IP  $remote_addr;
              proxy_set_header X-Forwarded-For $remote_addr;
              proxy_set_header Host $host;
              proxy_redirect off;
               proxy_pass http://127.0.0.1:8082;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection “upgrade”;
        }

               # Geoserver
        location /geoserver/ {
         proxy_pass http://127.0.0.1:8080/geoserver/;
         proxy_pass_header Set-Cookie;
         proxy_set_header Host $host;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

        location ^~ /proxy/ {
            if ($request_uri ~ ^/proxy/(.*) ) {
                    set $cors_request_uri $1;
            }

             proxy_pass http://127.0.0.1:8085/$cors_request_uri;
             proxy_buffering off;
        }

        location /api/ {
        	proxy_pass http://127.0.0.1:3000;
  		proxy_http_version 1.1;
 	 	proxy_set_header Upgrade $http_upgrade;
  		proxy_set_header Connection 'upgrade';
  		proxy_set_header Host $host;
  		proxy_cache_bypass $http_upgrade;	
        }

}
